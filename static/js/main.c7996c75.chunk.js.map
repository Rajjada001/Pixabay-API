{"version":3,"sources":["components/ImageCard.js","components/ImageSearch.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCard","image","tags","split","className","src","webformatURL","alt","user","views","downloads","likes","map","tag","index","ImageSearch","searchText","useState","text","setText","onSubmit","e","preventDefault","console","log","onChange","target","value","type","placeholder","App","images","setImages","isLoading","setIsLoading","term","setTerm","useEffect","fetch","then","res","json","data","hits","catch","err","length","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAgDeA,EA9CG,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEXC,EAAOD,EAAMC,KAAKC,MAAM,KAC9B,OACI,sBAAKC,UAAU,6CAAf,UACA,qBAAKC,IAAKJ,EAAMK,aAChBC,IAAI,SACJH,UAAU,WACV,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,wCAAf,sBACcH,EAAMO,QAEpB,+BACI,+BACI,4CAGCP,EAAMQ,SAEX,+BACI,gDAGCR,EAAMS,aAEX,+BACI,4CAGCT,EAAMU,eAKnB,qBAAKP,UAAU,YAAf,SACKF,EAAKU,KAAI,SAACC,EAAKC,GAAN,OACN,uBAAkBV,UAAU,2FAA5B,cACES,IADSC,YCbZC,EAvBK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAAgB,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAS7B,OACF,qBAAKf,UAAU,iDAAf,SACI,sBAAMgB,SARI,SAACC,GAEbA,EAAEC,iBACHC,QAAQC,IAAIN,GACXF,EAAWE,IAIiBd,UAAU,kBAApC,SACI,sBAAKA,UAAU,6DAAf,UACI,uBAAOqB,SAAU,SAAAJ,GAAC,OAAGF,EAAQE,EAAEK,OAAOC,QAAQvB,UAAU,kHAAkHwB,KAAK,OAAOC,YAAY,wBAClM,wBAASzB,UAAU,sIAAsIwB,KAAK,SAA9J,4BCqCJE,MAhDf,WACI,IADW,EAEiBb,mBAAS,IAF1B,mBAEJc,EAFI,KAEIC,EAFJ,OAGuBf,oBAAS,GAHhC,mBAGJgB,EAHI,KAGOC,EAHP,OAIajB,mBAAS,IAJtB,mBAIJkB,EAJI,KAIEC,EAJF,KA4BX,OArBAC,qBAAU,WACNC,MAAM,gCAAD,OAPe,qCAOf,cAAsDH,EAAtD,kCACJI,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACFV,EAAUU,EAAKC,MACfT,GAAa,MAEhBU,OAAM,SAAAC,GAAG,OAAItB,QAAQC,IAAIqB,QAG3B,CAACV,IAYD,sBAAK/B,UAAU,oBAAf,UACI,cAAC,EAAD,CAAaY,WAAY,SAACE,GAAD,OAAQkB,EAAQlB,OACtCe,GAA+B,IAAlBF,EAAOe,QACtB,oBAAI1C,UAAU,qCAAd,+BAIA6B,EACA,oBAAI7B,UAAU,qCAAd,wBAEO,qBAAKA,UAAU,yBAAf,SACH2B,EAAOnB,KAAI,SAAAX,GAAK,OACb,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAM8C,aClC1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7996c75.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst ImageCard = ({ image }) => {\r\n\r\n    const tags = image.tags.split(',');\r\n    return (\r\n        <div className=\"max-w-sm rounded overflow-hidden shadow-lg\" > \r\n        <img src={image.webformatURL}\r\n        alt=\"Random\" \r\n        className=\"w-fill\" />\r\n        <div className=\"px-6 py-4\">\r\n            <div className=\"font-bold tex-purple-500 text-xl mb-2\">\r\n                Photo by {image.user}\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <strong>\r\n                        Views:\r\n                    </strong>\r\n                    {image.views}\r\n                </li>\r\n                <li>\r\n                    <strong>\r\n                        Downloads:\r\n                    </strong>\r\n                    {image.downloads}\r\n                </li>\r\n                <li>\r\n                    <strong>\r\n                        Likes:\r\n                    </strong>\r\n                    {image.likes}\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div className=\"px-6 py-4\">\r\n            {tags.map((tag, index) =>(\r\n                <span key={index} className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">\r\n                #{tag}\r\n            </span>\r\n            ))}\r\n            \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default ImageCard;","import React, { useState } from 'react';\r\n\r\nconst ImageSearch = ({searchText}) => {\r\n    const [text, setText] = useState('');\r\n\r\n    const onSubmit = (e) =>\r\n     {\r\n         e.preventDefault();\r\n        console.log(text);\r\n         searchText(text);\r\n     }\r\n         return (\r\n       <div className=\"max-w-sm rounded overflow-hidden my-10 mx-auto\">\r\n           <form onSubmit={onSubmit} className=\"w-full max-w-sm\">\r\n               <div className=\"flex items-center border-b border-b-2 border-teal-500 py-2\">\r\n                   <input onChange={e=> setText(e.target.value)} className=\"appearance-none bg-transparent border-none w-full text-gray-700 mr-3 py-1 px-2 leading-tight focus:outline-none\" type=\"text\" placeholder=\"Search Image Term..\"  />\r\n                   <button  className=\"flex-shrink-0 bg-green-500 hover:bg-green-700 border-green-500 hover:border-green-700 text-sm border-4 text-white py-1 px-2 rounded\" type=\"submit\">\r\n                       Search\r\n                   </button>\r\n               </div>\r\n           </form>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default ImageSearch\r\n","import React, {useState, useEffect} from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\n// import axios from 'axios';\nfunction App() {\n    const PIXABAY_API_KEY = \"19373843-3e59a9b9d7cb7000752d41a45\";\n    const [images, setImages] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [term, setTerm] = useState('');\n\n    // use effect\n    useEffect(()=>{\n        fetch(`https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true`)\n        .then(res=>res.json())\n        .then(data => {\n            setImages(data.hits);\n            setIsLoading(false);\n        })\n        .catch(err => console.log(err));\n        //getImages();\n        \n    }, [term]);\n\n    // const getImages = async ()=> {\n    //     const response = await axios.get(\n    //         `https://pixabay.com/api/?key=${PIXABAY_API_KEY}&q=${term}&image_type=photo&pretty=true\n    //         `\n    //     );\n    //     setImages(response.data.hits);\n    //     console.log(response.data.hits)\n    // };\n\n    return (\n       <div className=\"container mx-auto\">\n           <ImageSearch searchText={(text)=>setTerm(text)}/>\n            {!isLoading && images.length === 0 && \n            <h1 className=\"text-5xl text-center mx-auto mt-32\">\n                No Images Found..\n            </h1> }\n\n           {isLoading?\n            <h1 className=\"text-6xl text-center mx-auto mt-32\">\n            Loading...\n           </h1> : <div className=\"grid grid-cols-3 gap-4\">\n               {images.map(image => (\n                   <ImageCard key={image.id} image={image} />\n               ))}\n           </div>}\n       </div>\n        );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}